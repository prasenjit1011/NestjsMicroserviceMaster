service: lambdasqs01

frameworkVersion: '>= 4.0.0'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  memorySize: 512
  timeout: 10
  logRetentionInDays: 7

  environment:
    MONGODB_URI: your-mongodb-uri-here

  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource:
        - !GetAtt MyQueue.Arn

functions:
  api:
    handler: dist/lambda.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY

  sqsHandler:
    handler: dist/lambda.handler
    events:
      - sqs:
          arn: arn:aws:sqs:us-east-1:466015320752:MyQueue
          batchSize: 5
          maximumBatchingWindow: 5





      
          




resources:
  Resources:
    MyQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: my-nest-queue-${self:provider.stage}

plugins:
  - serverless-offline

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - '!test/**'
    - '!README.md'
    - '!**/*.spec.ts'

custom:
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true
